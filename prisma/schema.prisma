datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String  @id @default(cuid())
  firstName String
  lastName  String?
  email     String  @unique
  role      Role    @default(CLIENT_USER)
  client    Client? @relation(fields: [clientId], references: [id])
  clientId  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password       Password?
  passwordResets PasswordReset[]
}

enum Role {
  CLIENT_USER
  CLIENT_ADMIN
  CLIENT_ACCOUNTANT
  SUPER_ADMIN
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model PasswordReset {
  id        String    @id @default(cuid())
  token     String    @unique
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  expiresAt DateTime
  usedAt    DateTime?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lead {
  id               String  @id @default(cuid())
  name             String
  email            String
  client           Client  @relation(fields: [clientId], references: [id])
  clientId         String
  message          String?
  meta             Json?
  additionalFields Json?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Client {
  id    String @id @default(cuid())
  name  String @unique
  leads Lead[]
  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
